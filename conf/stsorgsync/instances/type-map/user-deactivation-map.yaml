---
id: f7746cb8-929b-4597-9964-515ef5ca2a74
registrations:
  - validity:
      - input:
          class: { id: efefe41d-805b-478f-8e4d-841085cb7dfa, name: Type Map }
          name: User Account -> STSOrgSync User (Deactivation)
          sourceType: { id: 38df45c2-f4e2-4ffd-b91f-bc509ce8bcbf, name: User Account }
          targetType: { id: 7ec87b30-4818-4705-a103-3de63b5cc16b, name: STSOrgSync User }
          query: { relatesTo: { class: 38df45c2-f4e2-4ffd-b91f-bc509ce8bcbf } }
          idSeed: id
          warmUps:
            users: { relatesTo: { class: 38df45c2-f4e2-4ffd-b91f-bc509ce8bcbf } }
            employments: { relatesTo: { class: 06c495eb-fcef-4c09-996f-63fd2dfea427 } }
            persons: { relatesTo: { class: 66d33a37-f73c-4723-8dca-5feb9cf420e4 } }
          mappings:
            excludeFromStsOrg:
              sourceAttribute:
                - type: path
                  path: [ employments.opus, employedAt ]
                  composable: true
                - type: findAncestor
                  selfIfNotFound: false
                  parentRelation: parents.administrativ
                  condition:
                    type: mustBeTruthy
                    attribute: aggregateSubTree.stsOrg
                - type: path
                  path: [ foreignIds.orgUnitId ]
              targetAttribute: excludeFromStsOrg
              transform:
                type: boolean
                true: true
                false: false
            hasEmployment:
              sourceAttribute:
                type: path
                path: [ employments.$ ]
              targetAttribute: hasEmployment
              transform:
                type: boolean
                true: true
                false: false
            # This type map deals with each condition of the regular user type
            # map, one at a time
            activeTo:
              # Use activeTo of employment, if available
              sourceAttribute:
                type: path
                path: [ employments.opus, activeTo ]
              targetAttribute: activeTo
            activeTo1:
              # If the user has no employment - deactivate
              sourceAttribute: id
              targetAttribute: activeTo
              condition:
                - type: mustNotProduceValue
                  mapping: activeTo
                - type: mustNotProduceValue
                  mapping: hasEmployment
              transform:
                type: constant
                # This value is in the past and is easy to recognize
                value: '1955-12-31T23:59:59.999Z'
            activeTo2:
              # If the user has no AD foreign id - deactivate
              sourceAttribute: id
              targetAttribute: activeTo
              condition:
                - type: mustNotProduceValue
                  mapping: activeTo
                - type: mustNotExist
                  attribute: foreignIds.ad
              transform:
                type: constant
                # This value is in the past and is easy to recognize
                value: '1955-12-31T23:59:59.999Z'
            activeTo3:
              # If the user is 'disabled' - deactivate
              sourceAttribute: id
              targetAttribute: activeTo
              condition:
                - type: mustNotProduceValue
                  mapping: activeTo
                - type: mustEqual
                  attribute: disabled
                  value: true
              transform:
                type: constant
                # This value is in the past and is easy to recognize
                value: '1955-12-31T23:59:59.999Z'
            activeTo4:
              # If the associated unit is excluded from STS - deactivate
              sourceAttribute: id
              targetAttribute: activeTo
              condition:
                - type: mustNotProduceValue
                  mapping: activeTo
                - type: mustProduceValue
                  mapping: excludeFromStsOrg
              transform:
                type: constant
                # This value is in the past and is easy to recognize
                value: '1955-12-31T23:59:59.999Z'
        from: 2018-11-01T00:00:00.000Z
...
